<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Louis Tiao</title><link href="http://ltiao.github.io/" rel="alternate"></link><link href="http://ltiao.github.io/feeds/all.atom.xml" rel="self"></link><id>http://ltiao.github.io/</id><updated>2015-03-03T23:30:00+01:00</updated><entry><title>Synopsis: Pelican’s USE_FOLDER_AS_CATEGORY</title><link href="http://ltiao.github.io/synopsis-pelicans-use_folder_as_category.html" rel="alternate"></link><updated>2015-03-03T23:30:00+01:00</updated><author><name>Louis Tiao</name></author><id>tag:ltiao.github.io,2015-03-03:synopsis-pelicans-use_folder_as_category.html</id><summary type="html">&lt;p&gt;Pelican&amp;#8217;s &lt;a class="reference external" href="http://docs.getpelican.com/en/3.5.0/settings.html#basic-settings"&gt;USE_FOLDER_AS_CATEGORY&lt;/a&gt; setting is set to &lt;tt class="docutils literal"&gt;True&lt;/tt&gt; by default.
If you place an article within a subfolder of the content folder, and don&amp;#8217;t
specify a category in your article metadata, then the name of the subfolder
will be the category of your article. However, the documentation does not
specify Pelican&amp;#8217;s behavior under all possible situations. E.g. What happens
if an article is within a subfolder, and its category is specified but different
the name of the&amp;nbsp;subfolder?&lt;/p&gt;
&lt;p&gt;We summarize Pelican&amp;#8217;s behavior under all possible circumstances&amp;nbsp;here.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="23%" /&gt;
&lt;col width="30%" /&gt;
&lt;col width="21%" /&gt;
&lt;col width="26%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;&lt;tt class="docutils literal"&gt;USE_FOLDER_AS_CATEGORY&lt;/tt&gt;&lt;/th&gt;
&lt;th class="head"&gt;Category &lt;em&gt;c&lt;/em&gt; specified in metadata&lt;/th&gt;
&lt;th class="head"&gt;Article in subfolder &lt;em&gt;d&lt;/em&gt;&lt;/th&gt;
&lt;th class="head"&gt;Article&amp;#8217;s Category&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;True&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;True&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;True&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;c&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;True&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;True&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;False&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;c&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;True&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;False&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;True&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;d&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;True&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;False&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;False&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;DEFAULT_CATEGORY&lt;/tt&gt; (&lt;em&gt;Misc&lt;/em&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;False&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;True&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;True&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;c&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;False&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;True&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;False&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;c&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;False&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;False&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;True&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;DEFAULT_CATEGORY&lt;/tt&gt; (&lt;em&gt;Misc&lt;/em&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;False&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;False&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;False&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;DEFAULT_CATEGORY&lt;/tt&gt; (&lt;em&gt;Misc&lt;/em&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</summary><category term="python"></category><category term="pelican"></category><category term="synopsis"></category></entry><entry><title>Synopsis: Autoloading modules in IPython</title><link href="http://ltiao.github.io/synopsis-autoloading-modules-in-ipython.html" rel="alternate"></link><updated>2015-03-03T00:30:00+01:00</updated><author><name>Louis Tiao</name></author><id>tag:ltiao.github.io,2015-03-03:synopsis-autoloading-modules-in-ipython.html</id><summary type="html">&lt;p&gt;Simply&amp;nbsp;execute:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
In [1]: %load_ext autoreload
In [2]: %autoreload 2
&lt;/pre&gt;
&lt;p&gt;and modules will be auto-reloaded by&amp;nbsp;default.&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ipython.org/ipython-doc/dev/config/extensions/autoreload.html#module-IPython.extensions.autoreload"&gt;http://ipython.org/ipython-doc/dev/config/extensions/autoreload.html#module-IPython.extensions.autoreload&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="python"></category><category term="ipython"></category><category term="synopsis"></category></entry><entry><title>Quotes</title><link href="http://ltiao.github.io/quotes.html" rel="alternate"></link><updated>2015-03-03T18:40:00+01:00</updated><author><name>Louis Tiao</name></author><id>tag:ltiao.github.io,2015-03-02:quotes.html</id><summary type="html">&lt;div class="section" id="motivation"&gt;
&lt;h2&gt;Motivation&lt;/h2&gt;
&lt;blockquote class="pull-quote"&gt;
&lt;p&gt;If I quit now, I will soon be back to where I&amp;nbsp;started.&lt;/p&gt;
&lt;p&gt;And when I started, I was desperately wishing to be where I am&amp;nbsp;now.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="pull-quote"&gt;
I may not be there yet, but I&amp;#8217;m closer than I was yesterday.&lt;/blockquote&gt;
&lt;blockquote class="pull-quote"&gt;
&lt;p&gt;Whenever you don&amp;#8217;t feel like doing something is probably you need
to be doing it the&amp;nbsp;most.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;Friend of &lt;a class="reference external" href="http://www.reddit.com/user/masterofjello981"&gt;/u/masterofjello981&lt;/a&gt;
on &lt;a class="reference external" href="http://www.reddit.com/r/GetMotivated/comments/27lggi/asked_a_friend_for_practicing_tips_hit_me_with_a/"&gt;/r/GetMotivated&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="pull-quote"&gt;
&lt;p&gt;Never give up on a dream because of the time it will take to accomplish it.
The time will pass&amp;nbsp;anyway.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;Earl&amp;nbsp;Nightingale&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="meta"&gt;
&lt;h3&gt;Meta&lt;/h3&gt;
&lt;blockquote class="pull-quote"&gt;
&lt;p&gt;People often say that motivation doesn&amp;#8217;t last. Well, neither does
bathing - that&amp;#8217;s why we recommend it&amp;nbsp;daily.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;Zig&amp;nbsp;Ziglar&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="self-discipline"&gt;
&lt;h2&gt;Self-discipline&lt;/h2&gt;
&lt;blockquote class="pull-quote"&gt;
What hurts more, the pain of hard work or the pain of regret?&lt;/blockquote&gt;
&lt;blockquote class="pull-quote"&gt;
Work hard in silence; let success make the noise.&lt;/blockquote&gt;
&lt;blockquote class="pull-quote"&gt;
&lt;p&gt;Success isn&amp;#8217;t owned, it is leased. And rent is due every&amp;nbsp;day.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;span class="caps"&gt;J.J.&lt;/span&gt;&amp;nbsp;Watt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="pull-quote"&gt;
&lt;p&gt;If you don&amp;#8217;t make time to work on creating the life you want, you&amp;#8217;re
eventually going to be forced to spend a &lt;em&gt;lot&lt;/em&gt; of time dealing with
a life you don&amp;#8217;t&amp;nbsp;want.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;Kevin&amp;nbsp;Ngo&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="pull-quote"&gt;
&lt;p&gt;F&amp;#64;&amp;amp;$ motivation. it’s a fickle and unreliable little #&amp;amp;$&amp;#64;
and isn’t worth your&amp;nbsp;time.&lt;/p&gt;
&lt;p&gt;Better to cultivate discipline than to rely on motivation.
Force yourself to do things. Force yourself to get up out of
bed and practice. Force yourself to work. Motivation is fleeting
and it’s easy to rely on because it requires no concentrated
effort to get. Motivation comes to you, and you don’t have
to chase after&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;Discipline is reliable, motivation is fleeting. The question
isn’t how to keep yourself motivated. It’s how to train
yourself to work without&amp;nbsp;it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="failure-and-success"&gt;
&lt;h2&gt;Failure and&amp;nbsp;Success&lt;/h2&gt;
&lt;blockquote class="pull-quote"&gt;
&lt;p&gt;While one person hesitates because he feels inferior, the other
is busy making mistakes and becoming&amp;nbsp;superior.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;Henry C.&amp;nbsp;Link&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
</summary><category term="motivation"></category><category term="quotes"></category></entry><entry><title>Synopsis: Upgrading all outdated pip packages</title><link href="http://ltiao.github.io/synopsis-upgrading-all-outdated-pip-packages.html" rel="alternate"></link><updated>2015-02-05T20:00:00+01:00</updated><author><name>Louis Tiao</name></author><id>tag:ltiao.github.io,2015-02-05:synopsis-upgrading-all-outdated-pip-packages.html</id><summary type="html">&lt;p&gt;Simply&amp;nbsp;execute:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ pip list --outdated | cut -d' ' -f1 | xargs pip install --upgrade
&lt;/pre&gt;
&lt;p&gt;for versions of &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; that has the &lt;tt class="docutils literal"&gt;list&lt;/tt&gt; command, which I believe
is&amp;nbsp;1.3+.&lt;/p&gt;
</summary><category term="pip"></category><category term="python"></category><category term="synopsis"></category></entry><entry><title>Generate PDFs from Pelican Articles</title><link href="http://ltiao.github.io/generate-pdfs-from-pelican-articles.html" rel="alternate"></link><updated>2015-01-28T00:00:00+01:00</updated><author><name>Louis Tiao</name></author><id>tag:ltiao.github.io,2015-01-26:generate-pdfs-from-pelican-articles.html</id><summary type="html">&lt;p&gt;As of mid-2013, Pelican still advertised &lt;span class="caps"&gt;PDF&lt;/span&gt; generation of articles/pages
as one of its &lt;a class="reference external" href="https://github.com/getpelican/pelican/blob/8be7c0dbae5bd094379d74fd47acb41a56f18afd/docs/index.rst#features"&gt;features&lt;/a&gt;. However, the &lt;a class="reference external" href="http://docs.getpelican.com/en/3.5.0/changelog.html#id3"&gt;change log&lt;/a&gt; indicates that this
is no longer a core feature and has since become a Pelican plugin as of
version 3.3.0 (2013-09-24), see &lt;a class="reference external" href="https://github.com/getpelican/pelican/issues/1009"&gt;issue&lt;/a&gt; for further discussion. Therefore, it was
rather confounding to find the setting &lt;tt class="docutils literal"&gt;PDF_GENERATOR&lt;/tt&gt; to be listed in the
&lt;a class="reference external" href="http://docs.getpelican.com/en/3.5.0/settings.html#example-settings"&gt;examples settings&lt;/a&gt; of version 3.5.0, and of course, to no one&amp;#8217;s surprise,
adding the setting &lt;tt class="docutils literal"&gt;PDF_GENERATOR=True&lt;/tt&gt; isn&amp;#8217;t going to do&amp;nbsp;anything.&lt;/p&gt;
&lt;p&gt;If you have used &lt;a class="reference external" href="http://docs.getpelican.com/en/3.5.0/plugins.html"&gt;Pelican plugins&lt;/a&gt; before, then the solution should be obvious.
Simply install the &lt;tt class="docutils literal"&gt;pdf&lt;/tt&gt; plugin from &lt;a class="reference external" href="http://docs.getpelican.com/en/3.5.0/plugins.html"&gt;Pelican plugins&lt;/a&gt;. I personally
prefer to keep all plugins (and themes) in the &lt;tt class="docutils literal"&gt;&amp;lt;pelican_site_root&amp;gt;&lt;/tt&gt; directory,
on the same level as the &lt;tt class="docutils literal"&gt;pelicanconf.py&lt;/tt&gt; settings&amp;nbsp;file:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ cd &amp;lt;pelican_site_root&amp;gt;
$ mkdir plugins
$ git clone https://github.com/getpelican/pelican-plugins.git plugins
&lt;/pre&gt;
&lt;p&gt;Optionally, you can also add the repository as a&amp;nbsp;submodule:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git submodule add https://github.com/getpelican/pelican-plugins.git plugins
&lt;/pre&gt;
&lt;p&gt;or clone it anywhere else you like for that&amp;nbsp;matter.&lt;/p&gt;
&lt;p&gt;Lastly, you simply need to add &lt;tt class="docutils literal"&gt;plugins&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;PLUGIN_PATHS&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;pdf&lt;/tt&gt;
to &lt;tt class="docutils literal"&gt;&lt;span class="caps"&gt;PLUGINS&lt;/span&gt;&lt;/tt&gt;. The former will temporarily add &lt;tt class="docutils literal"&gt;PLUGIN_PATHS&lt;/tt&gt; to your
system path so that the latter is&amp;nbsp;importable:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
PLUGIN_PATHS = ['plugins']
PLUGINS = ['pdf']
&lt;/pre&gt;
&lt;p&gt;When you run &lt;tt class="docutils literal"&gt;pelican&lt;/tt&gt; (or &lt;tt class="docutils literal"&gt;make html&lt;/tt&gt;), the generated PDFs of your articles
will appear in the &lt;tt class="docutils literal"&gt;pdf&lt;/tt&gt; directory of the output directory, named according
to the article slug with the &lt;tt class="docutils literal"&gt;.pdf&lt;/tt&gt; extension.&lt;/p&gt;
&lt;p&gt;In my opinion, the generated PDFs aren&amp;#8217;t exactly terrific, and the plugin could
do with a little bit more work. Download this article as a &lt;span class="caps"&gt;PDF&lt;/span&gt; to see what I
mean (how&amp;nbsp;meta!)&lt;/p&gt;
&lt;!-- Download the `PDF of this article`_ to see what I mean (how meta!) --&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;If you happen to be using the &lt;tt class="docutils literal"&gt;notmyidea&lt;/tt&gt; theme, a link &lt;em&gt;get the pdf&lt;/em&gt;
will appear by simply adding &lt;tt class="docutils literal"&gt;PDF_PROCESSOR=True&lt;/tt&gt; to your settings
(as of &lt;a class="reference external" href="https://github.com/getpelican/pelican/blob/a7ca52dee05819be269b95556da01f965d107a50/pelican/themes/notmyidea/templates/taglist.html"&gt;commit a7ca52&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;!-- .. _PDF of this article: /pdf/generate-pdfs-from-pelican-articles.pdf --&gt;
</summary><category term="pelican"></category><category term="pdf"></category></entry><entry><title>Hosting Pelican site on Github: The Right Way(s)</title><link href="http://ltiao.github.io/hosting-pelican-site-on-github-the-right-ways.html" rel="alternate"></link><updated>2010-10-04T18:40:00+02:00</updated><author><name>Louis Tiao</name></author><id>tag:ltiao.github.io,2010-10-03:hosting-pelican-site-on-github-the-right-ways.html</id><summary type="html">&lt;div class="section" id="starting-out"&gt;
&lt;h2&gt;Starting&amp;nbsp;out&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Create a new git repository at Github: &lt;a class="reference external" href="https://github.com/new"&gt;https://github.com/new&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Add Python to &lt;tt class="docutils literal"&gt;.gitignore&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Clone the newly created&amp;nbsp;repository:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git clone &amp;lt;repo_https_clone_url&amp;gt; &amp;lt;site_root&amp;gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Create &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; (command only works if you have
&lt;tt class="docutils literal"&gt;virtualenvwrapper&lt;/tt&gt;):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ mkvirtualenv &amp;lt;venv_name&amp;gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Install &lt;tt class="docutils literal"&gt;pelican&lt;/tt&gt; (if you&amp;#8217;re not confident with &lt;tt class="docutils literal"&gt;reStructuredText&lt;/tt&gt;
yet, then install Markdown as&amp;nbsp;well):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ pip install pelican markdown
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Navigate to &lt;tt class="docutils literal"&gt;&amp;lt;site_root&amp;gt;&lt;/tt&gt; and execute the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pelican-quickstart&lt;/span&gt;&lt;/tt&gt;
script:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ cd &amp;lt;site_root&amp;gt;
$ pelican-quickstart
&lt;/pre&gt;
&lt;p&gt;and answer the prompts according to your needs. Presumably, you want
to upload your website using GitHub Pages, else you wouldn&amp;#8217;t be here.
Make sure you answer &lt;tt class="docutils literal"&gt;y&lt;/tt&gt; to generating a Fabfile/Makefile and to
using Github&amp;nbsp;pages.&lt;/p&gt;
&lt;blockquote&gt;
&lt;!-- This is how I answered the prompt. Commented out to hide --&gt;
&lt;!-- sensitive information. --&gt;
&lt;!-- Welcome to pelican-quickstart v3.5.0. --&gt;
&lt;!-- This script will help you create a new Pelican-based website. --&gt;
&lt;!-- Please answer the following questions so this script can generate the files --&gt;
&lt;!-- needed by Pelican. --&gt;
&lt;!-- &gt; Where do you want to create your new web site? [.] --&gt;
&lt;!-- &gt; What will be the title of this web site? Louis Tiao --&gt;
&lt;!-- &gt; Who will be the author of this web site? Louis Tiao --&gt;
&lt;!-- &gt; What will be the default language of this web site? [en] --&gt;
&lt;!-- &gt; Do you want to specify a URL prefix? e.g., http://example.com   (Y/n) Y --&gt;
&lt;!-- &gt; What is your URL prefix? (see above example; no trailing slash) http://ltiao.github.io --&gt;
&lt;!-- &gt; Do you want to enable article pagination? (Y/n) Y --&gt;
&lt;!-- &gt; How many articles per page do you want? [10] 5 --&gt;
&lt;!-- &gt; Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n) Y --&gt;
&lt;!-- &gt; Do you want an auto-reload &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; simpleHTTP script to assist with theme and site development? (Y/n) Y --&gt;
&lt;!-- &gt; Do you want to upload your website using FTP? (y/N) N --&gt;
&lt;!-- &gt; Do you want to upload your website using SSH? (y/N) y --&gt;
&lt;!-- &gt; What is the hostname of your SSH server? [localhost] cse.unsw.edu.au --&gt;
&lt;!-- &gt; What is the port of your SSH server? [22] --&gt;
&lt;!-- &gt; What is your username on that server? [root] ctia193 --&gt;
&lt;!-- &gt; Where do you want to put your web site on that server? [/var/www] ~/public_html --&gt;
&lt;!-- &gt; Do you want to upload your website using Dropbox? (y/N) N --&gt;
&lt;!-- &gt; Do you want to upload your website using S3? (y/N) N --&gt;
&lt;!-- &gt; Do you want to upload your website using Rackspace Cloud Files? (y/N) N --&gt;
&lt;!-- &gt; Do you want to upload your website using GitHub Pages? (y/N) y --&gt;
&lt;!-- &gt; Is this your personal page (username.github.io)? (y/N) y --&gt;
&lt;!-- Done. Your new project is available at /Users/tiao/Dropbox/Projects/website --&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="source-control"&gt;
&lt;h2&gt;Source&amp;nbsp;control&lt;/h2&gt;
&lt;p&gt;If you&amp;#8217;re already familiar with Github Pages, you will will already know
that content from the &lt;tt class="docutils literal"&gt;master&lt;/tt&gt; branch will be used to build and publish your
GitHub Pages site. Read this &lt;a class="reference external" href="https://help.github.com/articles/user-organization-and-project-pages/#user--organization-pages"&gt;article&lt;/a&gt; if you have no idea what I&amp;#8217;m talking&amp;nbsp;about.&lt;/p&gt;
&lt;div class="section" id="approach-1-the-octopress-approach"&gt;
&lt;h3&gt;Approach #1: The Octopress&amp;nbsp;Approach&lt;/h3&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;git checkout &lt;span class="pre"&gt;-b&lt;/span&gt; source&lt;/tt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;git add Makefile develop_server.sh fabfile.py pelicanconf.py publishconf.py&lt;/tt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;commit these&amp;nbsp;files&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;git push origin source&lt;/tt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;create an article &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;&amp;lt;root&amp;gt;/keyboard-review.md&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Title: My First Review
Date: 2010-12-03 10:20
Category: Review

Following is a review of my favorite mechanical keyboard.
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;make&amp;nbsp;github&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="approach-2-git-submodule"&gt;
&lt;h3&gt;Approach #2: Git&amp;nbsp;Submodule&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Coming&amp;nbsp;soon&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="pelican"></category><category term="github"></category><category term=""></category></entry></feed>